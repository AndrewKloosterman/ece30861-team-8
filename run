#!/usr/bin/python3

import argparse
import sys
import subprocess
import parse_project_file from url_class

def main() -> int:
    parser = argparse.ArgumentParser(
        prog="run",
        description="LLM Model Evaluator",
        add_help=False
    )
    
    parser.add_argument('-h', '--help', action='help', default=argparse.SUPPRESS,
                        help="""usage: run [-v | --verbose] [-h | --help] { install, test } | URL_FILE\n
                        positional arguments:\n
                        \tinstall             Install any dependencies needed\n
                        \ttest                Runs testing suite\n
                        \tURL_FILE            Absolute file location of set of URLs\n
                        
                        options:\n
                        \t-h, --help          show this help message\n
                        \t-v. --verbose       enable verbose output\n""")
    
    parser.add_argument(
        '-v', '--verbose',
        action='store_true',
        help='enable verbose output'
    )

    # install command
    parser.add_argument(
        "target",
        type=str,
        help="Choose 'install', 'test', or URL path."
    )

    args = parser.parse_args()


    # --- dispatch logic ---
    if args.target == "install":
        # if args.verbose:
        #     print("Verbose: Installing dependencies...")
        print("Installing dependencies...")
        subprocess.check_call([sys.executable, "-m", "pip", "install", "--user", "-r", "requirements.txt"])

    elif args.target == "test":
        if args.verbose:
            print("Verbose: Running tests...")
        print("Running test suite...")

    else:
        if args.verbose:
            print(f"Verbose: Processing URL file {args.target}")
        print(f"Processing file: {args.target}")
        parse_project_file(args.target)


    return 0


if __name__ == "__main__":
    main()
